{"version":3,"file":"static/js/107.b70df67b.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Content.module.css?68bf","webpack://my-app/./src/components/Posts.module.css?3c74","components/Posts.jsx","components/PostsContainer.jsx","components/ProfileStatusWithHooks.jsx","components/Content.jsx","components/ContentContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Content_content__gIMfQ\",\"photo\":\"Content_photo__Tl2qU\",\"aboutMe\":\"Content_aboutMe__h221s\",\"info\":\"Content_info__2Wq-W\",\"type\":\"Content_type__ktT5T\",\"picture\":\"Content_picture__DiCU4\",\"status\":\"Content_status__M8u5l\"};","// extracted by mini-css-extract-plugin\nexport default {\"myPosts\":\"Posts_myPosts__QuCvk\",\"form\":\"Posts_form__QNVkz\",\"avaAndName\":\"Posts_avaAndName__9qKcF\",\"posts\":\"Posts_posts__ea5bt\"};","import React from 'react';\r\nimport s from \"./Posts.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../utils/validators/validators\";\r\nimport {Textarea} from \"./FormsControls/FormsControls\";\r\nimport avatar from \"../img/zhivotnye_igra_sobaka_19261.jpg\";\r\n\r\nconst PostsItem = (props) => {\r\n    return (\r\n        <div className={s.myPosts}>\r\n            <div className={s.avaAndName}>\r\n                <img src={avatar} alt={\"Sorry, photo not found\"}/>\r\n                <h5>{props.name}</h5>\r\n            </div>\r\n            <div>\r\n                <p>{props.massage}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Posts = React.memo((props) => {\r\n\r\n    let postsElements = props.posts\r\n        .map(post => <PostsItem id={post.id} name={post.name} massage={post.massage} \r\n            key={post.id}/>);\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div className={s.form}>\r\n                <AddPostFormRedux onSubmit={addNewPost}/>\r\n            </div>\r\n            <div>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newPostText\" placeholder=\"What are you thinking about?\"/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: \"contentAddPostForm\"})(AddPostForm)\r\n\r\nexport default Posts;","import Posts from './Posts';\r\nimport {addPostActionCreator} from \"./redux/content-reducer\";\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.postsPage.posts,\r\n        newPostText: state.postsPage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React, {useState, useEffect} from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"----\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport s from \"./Content.module.css\";\nimport PostsContainer from \"./PostsContainer\";\nimport Preloader from \"./Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from '../img/user image.png';\nimport bigPhoto from '../img/coffee.jpg';\n\nconst InfoItem = (props) => {\n    return <div>\n        <span className={s.type}>{props.typeOfInfo}</span>\n        <span>{props.text}</span>\n    </div>\n}\n\nconst Content = ({profile, status, updateStatus, info}) => {\n    let infoElements = info.map(i => <InfoItem key={i.id} id={i.id} typeOfInfo={i.typeOfInfo} text={i.text}/>);\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    return (\n        <div className={s.content}>\n            <div className={s.photo}>\n                <img src={bigPhoto}/>\n            </div>\n            <div className={s.aboutMe}>\n                <div>\n                    <div className={s.picture}>\n                        <img src={profile.photos.large != null\n                            ? profile.photos.large : userPhoto} className={s.picture}/>\n                    </div>\n                    <div className={s.status}>\n                        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\n                    </div>\n                </div>\n                <div className={s.info}>\n                    {infoElements}\n                </div>\n            </div>\n            <div>\n                <PostsContainer/>\n            </div>\n        </div>\n    )\n}\n\nexport default Content;","import React from 'react';\nimport Content from \"./Content\";\nimport {connect} from \"react-redux\";\nimport {withRouter} from \"react-router-dom\";\nimport {getUserProfile, getStatus, updateStatus} from \"./redux/content-reducer\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass ContentContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Content {...this.props} profile={this.props.profile} info={this.props.info}\n                     status={this.props.status} updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.postsPage.profile,\n    status: state.postsPage.status,\n    info: state.postsPage.info,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n})\n\nexport default compose (\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n    withAuthRedirect\n) (ContentContainer);","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}"],"names":["PostsItem","props","className","s","src","avatar","alt","name","massage","Posts","React","postsElements","posts","map","post","id","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","connect","state","postsPage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","InfoItem","typeOfInfo","text","profile","infoElements","info","i","bigPhoto","photos","large","userPhoto","Preloader","ContentContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","auth","isAuth","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}