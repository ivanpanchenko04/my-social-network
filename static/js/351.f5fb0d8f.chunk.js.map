{"version":3,"file":"static/js/351.f5fb0d8f.chunk.js","mappings":"+JACA,G,QAA2B,4BAA3B,EAA+D,yBAA/D,EAAqK,uBAArK,EAAmM,uBAAnM,EAAmO,yBAAnO,EAAsQ,0BAAtQ,EAAuS,uB,oECMjSA,EAAe,SAACC,GAClB,IAAIC,EAAO,aAAeD,EAAME,GAEhC,OACI,gBAAKC,UAAWC,EAAhB,UACI,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UAKhCC,EAAU,SAACP,GACb,OACI,iBAAKG,UAAWC,EAAhB,WACI,0BACI,gBAAKI,IAAKC,EAAaC,IAAI,8BAE/B,iBAAKP,UAAWC,EAAhB,WACI,wBAAKJ,EAAMM,QACX,uBAAIN,EAAMW,iBA+CpBC,GAAsBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,EAbL,SAACb,GACpB,OACI,kBAAMG,UAAWC,EAAQW,SAAUf,EAAMgB,aAAzC,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUb,KAAK,iBAAiBc,YAAY,0BAElE,0BACI,6CAQhB,EA3CiB,SAACpB,GACd,IAAIqB,EAAQrB,EAAMsB,aAEdC,EAAmBF,EAAMG,SACxBC,KAAI,SAAAd,GAAO,OAAI,SAACZ,EAAD,CAAcO,KAAMK,EAAQL,KAAMJ,GAAIS,EAAQT,IAASS,EAAQT,OAC/EwB,EAAkBL,EAAMM,QACvBF,KAAI,SAAAG,GAAM,OAAI,SAACrB,EAAD,CAASD,KAAMsB,EAAOtB,KAAMJ,GAAI0B,EAAO1B,GAClDS,QAASiB,EAAOjB,SAAciB,EAAO1B,OAM7C,OAAKF,EAAM6B,QAGP,iBAAK1B,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKmB,KAEL,iBAAKpB,UAAWC,EAAhB,UACKsB,GACD,SAACd,EAAD,CAAqBG,SAbb,SAACe,GACjB9B,EAAM+B,YAAYD,EAAOE,0BAGH,SAAC,KAAD,CAAU3B,GAAG,Y,mBCxB3C,GAAe4B,E,QAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAACb,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAIH,SAACa,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,GAASC,EAAAA,EAAAA,GAAmBJ,SAOpCK,EAAAA,EAFJ,CAGEC,I,gJCnBEC,EAA6B,SAAClB,GAC9B,MAAO,CACHQ,OAAQR,EAAMmB,KAAKX,SAIdQ,EAAmB,SAACI,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK3C,MAAM6B,QACT,SAACY,GAAD,UAAeE,KAAK3C,SADI,SAAC,KAAD,CAAUK,GAAG,eAHT,GACXuC,EAAAA,WAShC,OAFmCV,EAAAA,EAAAA,IAAQK,EAARL,CAAoCQ,K","sources":["webpack://my-app/./src/components/Massages.module.css?60b5","components/Massages.jsx","components/MassagesContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"massages\":\"Massages_massages__ayshT\",\"people\":\"Massages_people__Ov9g5\",\"friends\":\"Massages_friends__3L5gv\",\"active\":\"Massages_active__AUzoH\",\"chat\":\"Massages_chat__O4Xcs\",\"text\":\"Massages_text__2FHEB\",\"dialog\":\"Massages_dialog__bWGWa\",\"letters\":\"Massages_letters__1TdS5\",\"form\":\"Massages_form__hwry7\"};","import React from \"react\";\r\nimport s from \"./Massages.module.css\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"./FormsControls/FormsControls\";\r\nimport friendPhoto from \"../img/dragon.jpg\";\r\n\r\nconst MassagesItem = (props) => {\r\n    let path = \"/Massages/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Massage = (props) => {\r\n    return (\r\n        <div className={s.chat}>\r\n            <div>\r\n                <img src={friendPhoto} alt=\"Sorry, photo not found\"/>\r\n            </div>\r\n            <div className={s.text}>\r\n                <h5>{props.name}</h5>\r\n                <p>{props.massage}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Massages = (props) => {\r\n    let state = props.massagesPage;\r\n\r\n    let massagesElements = state.massages\r\n        .map(massage => <MassagesItem name={massage.name} id={massage.id} key={massage.id}/> );\r\n    let lettersElements = state.letters\r\n        .map(letter => <Massage name={letter.name} id={letter.id} \r\n            massage={letter.massage} key={letter.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMassageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to=\"/login\"/>;\r\n\r\n    return (\r\n        <div className={s.massages}>\r\n            <div className={s.people}>\r\n                {massagesElements}\r\n            </div>\r\n            <div className={s.letters}>\r\n                {lettersElements}\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form className={s.form} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name=\"newMassageBody\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Massages;","import { connect } from \"react-redux\";\r\nimport Massages from \"./Massages\";\r\nimport { sendMessageCreator } from \"./redux/messages-reducer\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        massagesPage: state.massagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMassageBody) => {\r\n            dispatch(sendMessageCreator(newMassageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Massages);\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\"/>;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectAuthRedirectComponent;\r\n}"],"names":["MassagesItem","props","path","id","className","s","to","name","Massage","src","friendPhoto","alt","massage","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","state","massagesPage","massagesElements","massages","map","lettersElements","letters","letter","isAuth","values","sendMessage","newMassageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Massages","mapStateToPropsForRedirect","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}